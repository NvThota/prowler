---
- name: Run Prowler Docker Container using either Access Key or ARN with Web Identity Token
  hosts: localhost
  become: True

  vars_prompt:
    - name: choice
      prompt: "Choose an option (1 for Access Key/Secret, 2 for ARN with Web Identity Token)"
      private: no

    - name: role_arn
      prompt: "Enter the Role ARN (only required for option 2)"
      private: no
      default: ""

    - name: region
      prompt: "Enter the AWS region"
      private: no

    - name: web_identity_token
      prompt: "Enter the path to the web identity token (only required for option 2)"
      private: no
      default: ""

  tasks:
    - name: Debug the value of choice
      debug:
        var: choice

    - name: Validate user choice
      fail:
        msg: "Invalid choice. Please choose 1 for Access Key/Secret or 2 for ARN with Web Identity Token."
      when: choice not in ['1', '2']

    - name: Check if role ARN is required but not provided
      fail:
        msg: "Role ARN is required for option 2"
      when: choice == '2' and role_arn == ""

    - name: Check if web identity token is required but not provided
      fail:
        msg: "Web identity token is required for option 2"
      when: choice == '2' and web_identity_token == ""

    # Option 1: Using Access Key and Secret Key from AWX Environment Variables
    - name: Execute Prowler commands using Access Key and Secret Key (Option 1)
      shell: |
        AWS_ACCESS_KEY_ID={{ lookup('env', 'AWS_ACCESS_KEY_ID') }} \
        AWS_SECRET_ACCESS_KEY={{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }} \
        prowler aws --services elb -M csv
      register: prowler_output_access
      ignore_errors: yes
      when: choice == '1'

    # Option 2: Using ARN with Web Identity Token
    - name: Assume Role with AWS STS using Web Identity Token (Option 2)
      shell: |
        aws sts assume-role-with-web-identity --role-arn {{ role_arn }} --role-session-name prowlerSession --region {{ region }} --output json --web-identity-token {{ web_identity_token }}
      register: sts_output_web_identity
      ignore_errors: yes
      when: choice == '2'

    - name: Parse STS output for Web Identity Token
      set_fact:
        aws_access_key_id_web: "{{ sts_output_web_identity.stdout | from_json | json_query('Credentials.AccessKeyId') }}"
        aws_secret_access_key_web: "{{ sts_output_web_identity.stdout | from_json | json_query('Credentials.SecretAccessKey') }}"
        aws_session_token_web: "{{ sts_output_web_identity.stdout | from_json | json_query('Credentials.SessionToken') }}"
      when: choice == '2'

    - name: Execute Prowler commands using assumed role credentials for Web Identity Token (Option 2)
      shell: |
        AWS_ACCESS_KEY_ID={{ aws_access_key_id_web }} \
        AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key_web }} \
        AWS_SESSION_TOKEN={{ aws_session_token_web }} \
        prowler aws --services elb -M csv
      register: prowler_output_web_identity
      ignore_errors: yes
      when: choice == '2'

    # Common Task: Display Prowler output
    - name: Display Prowler output
      debug:
        msg: "{{ prowler_output_access.stdout if choice == '1' else prowler_output_web_identity.stdout }}"

    - name: Display Prowler version
      shell: prowler --version
      register: prowler_version_output

    - name: Display Prowler version output
      debug:
        var: prowler_version_output.stdout
